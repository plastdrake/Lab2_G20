// <auto-generated />
using System;
using Lab2_G20.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab2_G20.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241025074308_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Lab2_G20.Models.Crop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CropType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HarvestDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PlantingDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Crops");
                });

            modelBuilder.Entity("Lab2_G20.Models.GrowthHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CropType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HarvestDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PlantingDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GrowthHistories");
                });

            modelBuilder.Entity("Lab2_G20.Models.PlantingSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Crop")
                        .HasColumnType("TEXT");

                    b.Property<int>("DaysToHarvest")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<string>("OptimalPlantingDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("PlannedPlantingDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReminderDaysBefore")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PlantingSchedules");
                });

            modelBuilder.Entity("Lab2_G20.Models.UserReminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ReminderDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReminderNotes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReminderType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserReminders");
                });
#pragma warning restore 612, 618
        }
    }
}
